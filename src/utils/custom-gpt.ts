
import { v4 as uuidv4 } from 'uuid';
import { Equipment } from '@/types/equipment';
import { ScriptResponse } from './api';

export type CustomGptType = "roteiro" | "bigIdea" | "stories";

export type ConteudoEstrategia = 
  | "üü° Atrair Aten√ß√£o" 
  | "üü¢ Criar Conex√£o" 
  | "üî¥ Fazer Comprar" 
  | "üîÅ Reativar Interesse" 
  | "‚úÖ Fechar Agora";

interface CustomGptRequestBase {
  tipo: CustomGptType;
  equipamento: string;
  quantidade?: number;
  tom?: string;
  estrategiaConteudo?: ConteudoEstrategia;
  equipamentoData?: Equipment;
}

interface AdvancedCustomGptRequest extends CustomGptRequestBase {
  topic?: string;
  bodyArea?: string;
  purposes?: string[];
  additionalInfo?: string;
  marketingObjective?: string;
}

export type CustomGptRequest = CustomGptRequestBase | AdvancedCustomGptRequest;

interface CustomGptResponse {
  id: string;
  content: string;
}

// Simula√ß√£o de gera√ß√£o de conte√∫do customizado (em um app real, isso seria uma chamada √† API)
export async function generateCustomContent(request: CustomGptRequest): Promise<CustomGptResponse> {
  // Simular processamento
  console.log("Gerando conte√∫do customizado:", request);
  
  // Aguardar por um tempo simulando processamento
  await new Promise(resolve => setTimeout(resolve, 1000));
  
  // Gerar ID √∫nico para o conte√∫do
  const contentId = uuidv4();
  
  // Gerar conte√∫do baseado no tipo solicitado
  const contentIntro = getContentIntro(request);
  const contentBody = getContentBody(request);
  const contentEnding = getContentEnding(request);
  
  // Retornar resposta formatada
  return {
    id: contentId,
    content: `${contentIntro}\n\n${contentBody}\n\n${contentEnding}`
  };
}

// Fun√ß√µes auxiliares para gera√ß√£o de conte√∫do
function getContentIntro(request: CustomGptRequest): string {
  const { tipo, equipamento, estrategiaConteudo } = request;
  
  switch (tipo) {
    case "roteiro":
      return `**ROTEIRO PARA ${equipamento.toUpperCase()}**\n\n${estrategiaConteudo ? `Estrat√©gia: ${estrategiaConteudo}\n` : ''}Esse √© um roteiro gerado para o equipamento ${equipamento}.`;
    case "bigIdea":
      return `**BIG IDEA: ${equipamento.toUpperCase()}**\n\n${estrategiaConteudo ? `Abordagem: ${estrategiaConteudo}\n` : ''}Uma ideia poderosa para comunica√ß√£o do equipamento ${equipamento}.`;
    case "stories":
      return `**IDEIAS DE STORIES: ${equipamento.toUpperCase()}**\n\nSugest√µes criativas para stories sobre o equipamento ${equipamento}.`;
    default:
      return `**CONTE√öDO PERSONALIZADO: ${equipamento.toUpperCase()}**`;
  }
}

function getContentBody(request: CustomGptRequest): string {
  const { tipo, equipamento, equipamentoData } = request;
  
  const equipmentInfo = equipamentoData 
    ? `Tecnologia: ${equipamentoData.tecnologia || 'Avan√ßada'}\n\nBenef√≠cios: ${equipamentoData.beneficios || 'Resultados superiores'}\n\nIndica√ß√µes: ${equipamentoData.indicacoes ? Array.isArray(equipamentoData.indicacoes) ? equipamentoData.indicacoes.join(", ") : equipamentoData.indicacoes : 'Diversos tratamentos'}`
    : `O ${equipamento} √© um equipamento avan√ßado com tecnologia de ponta.`;
  
  // Conte√∫do adicional para o modo avan√ßado
  let advancedContent = '';
  const advancedRequest = request as AdvancedCustomGptRequest;
  
  if (advancedRequest.topic) {
    advancedContent += `\n\nT√≥pico principal: ${advancedRequest.topic}`;
  }
  
  if (advancedRequest.bodyArea) {
    advancedContent += `\n\n√Årea do corpo: ${advancedRequest.bodyArea}`;
  }
  
  if (advancedRequest.purposes && advancedRequest.purposes.length > 0) {
    advancedContent += `\n\nFinalidades: ${advancedRequest.purposes.join(", ")}`;
  }
  
  switch (tipo) {
    case "roteiro":
      return `## Informa√ß√µes sobre o equipamento\n${equipmentInfo}${advancedContent}\n\n## Gancho\n\nVoc√™ j√° se perguntou como obter resultados profissionais sem precisar de procedimentos invasivos?\n\n## Corpo\n\nApresentamos o ${equipamento}, uma solu√ß√£o revolucion√°ria que transforma o tratamento est√©tico.\n\nEste equipamento utiliza tecnologia avan√ßada para proporcionar resultados vis√≠veis j√° nas primeiras sess√µes.\n\n## Chamada para a√ß√£o\n\nAgende sua avalia√ß√£o gratuita e descubra como o ${equipamento} pode transformar sua vida.`;
    
    case "bigIdea":
      return `## Conceito central\n\n"${equipamento}: Transformando o imposs√≠vel em realidade"\n\n## Desenvolvimento\n${equipmentInfo}${advancedContent}\n\nEssa tecnologia revolucion√°ria est√° mudando a forma como pensamos sobre tratamentos est√©ticos, proporcionando resultados que antes s√≥ eram poss√≠veis com procedimentos invasivos.\n\n## Aplica√ß√µes\n\nEssa ideia central pode ser aplicada em diversos formatos de conte√∫do, desde postagens educativas at√© depoimentos de clientes satisfeitos, sempre enfatizando a transforma√ß√£o proporcionada.`;
    
    case "stories":
      return `## Sugest√£o 1: Antes e depois\n\nMostre resultados reais com o ${equipamento}, destacando a transforma√ß√£o em poucas sess√µes.\n\n## Sugest√£o 2: Por tr√°s da tecnologia\n\nExplique de forma visual e simples como funciona a tecnologia do ${equipamento}.\n\n## Sugest√£o 3: Perguntas frequentes\n\nResponda as d√∫vidas mais comuns sobre o ${equipamento} em formato de stories interativos.\n\n## Sugest√£o 4: Depoimento de cliente\n\nCompartilhe a experi√™ncia de um cliente satisfeito com o tratamento usando o ${equipamento}.\n\n## Sugest√£o 5: Promo√ß√£o rel√¢mpago\n\nCrie urg√™ncia com uma oferta especial de tempo limitado para o ${equipamento}.`;
    
    default:
      return `Informa√ß√µes detalhadas sobre o ${equipamento}:\n\n${equipmentInfo}${advancedContent}`;
  }
}

function getContentEnding(request: CustomGptRequest): string {
  const { tipo, equipamento } = request;
  
  switch (tipo) {
    case "roteiro":
      return `## Considera√ß√µes finais\n\nEste roteiro foi gerado especificamente para o ${equipamento}. Adapte conforme necess√°rio para seu estilo de comunica√ß√£o e p√∫blico-alvo espec√≠fico.\n\nRecomendamos gravar em ambiente bem iluminado e usar elementos visuais que destaquem os benef√≠cios do equipamento.`;
    
    case "bigIdea":
      return `## Implementa√ß√£o\n\nEsta big idea pode ser desenvolvida em uma campanha completa, explorando diferentes aspectos da transforma√ß√£o proporcionada pelo ${equipamento}.\n\nRecomendamos criar conte√∫dos que mostrem o "antes e depois" da transforma√ß√£o, n√£o apenas nos resultados f√≠sicos, mas tamb√©m na qualidade de vida dos clientes.`;
    
    case "stories":
      return `## Dicas de produ√ß√£o\n\n- Use cores vibrantes e chamativas\n- Mantenha textos curtos e diretos\n- Inclua elementos interativos como enquetes e perguntas\n- Use m√∫sica que combine com a energia do seu neg√≥cio\n- Finalize sempre com um call-to-action claro\n\nEstas sugest√µes foram criadas especificamente para promover o ${equipamento}.`;
    
    default:
      return `Conte√∫do gerado para ${equipamento}. Personalize conforme necess√°rio para sua estrat√©gia de comunica√ß√£o.`;
  }
}
