
import "https://deno.land/x/xhr@0.1.0/mod.ts";
import { serve } from "https://deno.land/std@0.168.0/http/server.ts";

const openAIApiKey = Deno.env.get('OPENAI_API_KEY');

const corsHeaders = {
  'Access-Control-Allow-Origin': '*',
  'Access-Control-Allow-Headers': 'authorization, x-client-info, apikey, content-type',
};

serve(async (req) => {
  console.log('üöÄ Edge function generate-marketing-diagnostic iniciada');
  console.log('üìù Method:', req.method);
  console.log('üîë OpenAI API Key configurada:', openAIApiKey ? 'SIM' : 'N√ÉO');
  
  if (req.method === 'OPTIONS') {
    console.log('‚úÖ Respondendo OPTIONS request');
    return new Response(null, { headers: corsHeaders });
  }

  try {
    console.log('üì• Recebendo dados do diagn√≥stico...');
    const diagnosticData = await req.json();
    console.log('üìä Dados recebidos:', JSON.stringify(diagnosticData, null, 2));

    if (!openAIApiKey) {
      console.error('‚ùå OPENAI_API_KEY n√£o configurada!');
      return new Response(JSON.stringify({ 
        error: 'OPENAI_API_KEY n√£o configurada',
        success: false,
        details: 'Configure a chave da OpenAI nas configura√ß√µes do projeto'
      }), {
        status: 500,
        headers: { ...corsHeaders, 'Content-Type': 'application/json' },
      });
    }

    // Criar o prompt personalizado com os dados do diagn√≥stico
    const prompt = createDiagnosticPrompt(diagnosticData);
    console.log('üìù Prompt criado, tamanho:', prompt.length);

    console.log('ü§ñ Chamando OpenAI API...');
    const response = await fetch('https://api.openai.com/v1/chat/completions', {
      method: 'POST',
      headers: {
        'Authorization': `Bearer ${openAIApiKey}`,
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        model: 'gpt-4o-mini',
        messages: [
          { 
            role: 'system', 
            content: 'Voc√™ √© o CONSULTOR FLUIDA ‚Äî um estrategista de marketing especializado em cl√≠nicas m√©dicas e cl√≠nicas est√©ticas. Responda sempre de forma estruturada e profissional, incluindo a identifica√ß√£o de um mentor estrat√©gico adequado.' 
          },
          { role: 'user', content: prompt }
        ],
        temperature: 0.7,
        max_tokens: 3000
      }),
    });

    console.log('üì° Resposta OpenAI status:', response.status);
    
    if (!response.ok) {
      console.error('‚ùå OpenAI API error:', response.status, response.statusText);
      const errorText = await response.text();
      console.error('‚ùå OpenAI error body:', errorText);
      throw new Error(`OpenAI API error: ${response.status} - ${errorText}`);
    }

    const data = await response.json();
    console.log('‚úÖ Resposta OpenAI recebida');
    console.log('üìä Usage:', data.usage);
    
    const diagnosticResult = data.choices[0].message.content;
    console.log('üìù Diagn√≥stico gerado, tamanho:', diagnosticResult?.length || 0);

    return new Response(JSON.stringify({ 
      diagnostic: diagnosticResult,
      success: true 
    }), {
      headers: { ...corsHeaders, 'Content-Type': 'application/json' },
    });
  } catch (error) {
    console.error('üí• Error generating diagnostic:', error);
    return new Response(JSON.stringify({ 
      error: 'Erro ao gerar diagn√≥stico com IA',
      success: false,
      details: error.message 
    }), {
      status: 500,
      headers: { ...corsHeaders, 'Content-Type': 'application/json' },
    });
  }
});

function createDiagnosticPrompt(data: any): string {
  // Mapear os dados para o formato do prompt
  const tipoClinica = data.clinicType === 'clinica_medica' ? 'M√©dica' : 'Est√©tica';
  const especialidade = data.medicalSpecialty || 'N√£o especificado';
  const procedimentos = data.medicalProcedures || data.aestheticFocus || 'N√£o especificado';
  const equipamentos = data.aestheticEquipments || 'N√£o especificado';
  const objetivo = data.medicalObjective || data.aestheticObjective || 'N√£o especificado';
  const faturamento = data.currentRevenue || 'N√£o informado';
  const meta = data.revenueGoal || 'N√£o informado';
  const frequencia = data.contentFrequency || 'N√£o informado';
  const aparece = data.personalBrand || 'N√£o informado';
  const publico = data.targetAudience || 'N√£o definido';
  const posicionamento = data.clinicPosition || 'N√£o definido';
  const trafegoReq = data.paidTraffic || 'N√£o informado';

  const prompt = `Voc√™ √© o CONSULTOR FLUIDA ‚Äî um estrategista de marketing especializado em cl√≠nicas m√©dicas e cl√≠nicas est√©ticas.

Com base no briefing abaixo, gere uma resposta completa dividida em se√ß√µes claras:

1. Diagn√≥stico Estrat√©gico da Cl√≠nica
2. Sugest√µes de Conte√∫do Inteligente
3. Plano de A√ß√£o de 3 Semanas
4. Mentor Estrat√©gico Identificado + Enigma

---

üì• Dados do briefing:
- Tipo de cl√≠nica: ${tipoClinica}
- Especialidade (se m√©dica): ${especialidade}
- Procedimentos oferecidos: ${procedimentos}
- Equipamentos utilizados: ${equipamentos}
- Objetivo principal: ${objetivo}
- Faturamento atual: ${faturamento}
- Meta: ${meta}
- Frequ√™ncia de conte√∫do: ${frequencia}
- Aparece no conte√∫do? ${aparece}
- P√∫blico ideal: ${publico}
- Posicionamento da cl√≠nica: ${posicionamento}
- Usa tr√°fego pago? ${trafegoReq}

---

üì¶ Gera√ß√£o do conte√∫do:

## üìä Diagn√≥stico Estrat√©gico
- Identifique os principais gargalos e oportunidades
- Use tom consultivo, direto e adaptado ao perfil (m√©dico ou est√©tico)

## üí° Sugest√µes de Conte√∫do Inteligente
- Gere 3 a 5 ideias de conte√∫do que a cl√≠nica pode executar imediatamente
- Adapte √† linguagem desejada e formatos mais usados
- Incluir pelo menos uma ideia relacionada a equipamentos, se aplic√°vel

## üìÖ Plano de A√ß√£o ‚Äì 3 Semanas
- Semana 1: Posicionamento e visibilidade
- Semana 2: Prova social e diferencia√ß√£o
- Semana 3: Convers√£o e fideliza√ß√£o
- Liste 3 a 4 a√ß√µes pr√°ticas por semana, com tom consultivo

## üß© Mentor Estrat√©gico Identificado
Baseado no perfil da cl√≠nica, identifique qual dos mentores abaixo seria mais adequado e gere um enigma personalizado:

**Mentores dispon√≠veis:**
- **Leandro Ladeira**: Convers√£o e vendas diretas (tr√°fego pago, gatilhos mentais)
- **√çcaro de Carvalho**: Storytelling e posicionamento (branding, autoridade)
- **Camila Porto**: Marketing digital acess√≠vel (redes sociais, iniciantes)
- **Paulo Cuenca**: Criatividade e est√©tica visual (criatividade, diferencia√ß√£o)
- **Hyeser Souza**: Virais e engajamento org√¢nico (humor, trends)
- **Washington Olivetto**: Big ideas e branding institucional (conceito, memor√°vel)
- **Pedro Sobral**: Performance e ROI estruturado (m√©tricas, anal√≠tico)

**Crit√©rios de sele√ß√£o:**
- Cl√≠nicas m√©dicas + autoridade ‚Üí √çcaro de Carvalho
- Cl√≠nicas m√©dicas + escala/estrutura√ß√£o ‚Üí Pedro Sobral
- Cl√≠nicas est√©ticas + mais leads ‚Üí Leandro Ladeira
- Iniciantes em marketing ‚Üí Camila Porto
- Posicionamento premium ‚Üí Washington Olivetto
- Foco em criatividade visual ‚Üí Paulo Cuenca
- Presen√ßa ativa + engajamento ‚Üí Hyeser Souza

Apresente o mentor escolhido assim:
**üß† Mentor Estrat√©gico: [NOME DO MENTOR]**
**Foco:** [ESPECIALIDADE]
**Por que foi escolhido:** [JUSTIFICATIVA BASEADA NO PERFIL]
**Enigma personalizado:** [FRASE SAT√çRICA RELACIONADA AO PERFIL DA CL√çNICA]

---

‚ö†Ô∏è Regras finais:
- Use linguagem coerente com o perfil e objetivo da cl√≠nica
- N√£o gere texto gen√©rico
- Organize com t√≠tulos claros e tom profissional/humano
- Seja espec√≠fico e acion√°vel nas sugest√µes
- O mentor deve ser relevante ao perfil identificado
- O enigma deve ser espirituoso e relacionado aos desafios da cl√≠nica`;

  return prompt;
}
