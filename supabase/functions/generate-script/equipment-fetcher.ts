
export interface EquipmentData {
  id: string;
  nome: string;
  tecnologia: string;
  indicacoes: string;
  beneficios: string;
  diferenciais: string;
  categoria: string;
}

export class EquipmentFetcher {
  static async fetchEquipmentDetails(supabase: any, equipmentNames: string[]): Promise<EquipmentData[]> {
    if (!equipmentNames || equipmentNames.length === 0) {
      return [];
    }

    console.log('üîç [EquipmentFetcher] Buscando equipamentos:', equipmentNames);

    try {
      // Buscar por nome exato ou usando ILIKE para ser case-insensitive
      let equipments = [];
      
      for (const equipmentName of equipmentNames) {
        const { data: equipment, error: equipmentError } = await supabase
          .from('equipamentos')
          .select('id, nome, tecnologia, indicacoes, beneficios, diferenciais, categoria')
          .or(`nome.eq.${equipmentName},nome.ilike.%${equipmentName}%`)
          .eq('ativo', true);
          
        if (equipment && equipment.length > 0) {
          equipments.push(...equipment);
        }
      }


      if (!equipments || equipments.length === 0) {
        console.warn('‚ö†Ô∏è [EquipmentFetcher] Nenhum equipamento encontrado para:', equipmentNames);
        return [];
      }

      console.log('‚úÖ [EquipmentFetcher] Equipamentos encontrados:', equipments.length);
      equipments.forEach(eq => {
        console.log(`üìã [EquipmentFetcher] ${eq.nome}: ${eq.tecnologia}`);
      });

      return equipments;
    } catch (fetchError) {
      console.error('‚ùå [EquipmentFetcher] Erro cr√≠tico:', fetchError);
      return [];
    }
  }

  static buildEquipmentPromptSection(equipments: EquipmentData[]): string {
    if (equipments.length === 0) {
      return `
üö® REGRA CR√çTICA DE EQUIPAMENTOS:
- NENHUM equipamento v√°lido encontrado no banco de dados
- N√ÉO mencione equipamentos espec√≠ficos que n√£o existem
- N√ÉO invente informa√ß√µes sobre equipamentos
- Use termos gen√©ricos como "nossos tratamentos" ou "tecnologias avan√ßadas"
- NUNCA associe caracter√≠sticas de um equipamento a outro
      `;
    }

    const equipmentList = equipments.map(eq => `
üìã ${eq.nome}:
- Tecnologia: ${eq.tecnologia}
- Indica√ß√µes: ${eq.indicacoes}
- Benef√≠cios: ${eq.beneficios}
- Diferenciais: ${eq.diferenciais}
    `).join('\n');

    const equipmentNames = equipments.map(eq => eq.nome).join(', ');

    return `
üö® REGRA CR√çTICA DE EQUIPAMENTOS:
- OBRIGAT√ìRIO: Mencione APENAS os equipamentos listados: ${equipmentNames}
- Use EXATAMENTE os nomes e tecnologias fornecidas
- N√ÉO invente caracter√≠sticas que n√£o est√£o listadas
- N√ÉO misture informa√ß√µes de equipamentos diferentes
- N√ÉO mencione "canetas emagrecedoras" se n√£o estiver nas especifica√ß√µes

üìã EQUIPAMENTOS DISPON√çVEIS:
${equipmentList}

‚ö†Ô∏è VALIDA√á√ÉO CR√çTICA: 
- Use APENAS as informa√ß√µes fornecidas acima
- N√ÉO adicione equipamentos ou tecnologias n√£o listadas
- N√ÉO associe caracter√≠sticas de outros equipamentos
    `;
  }
}
